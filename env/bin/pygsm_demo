#!/home/aj/VineyardReal/env/bin/python2.6
# vim: ai ts=4 sts=4 et sw=4

import os
import sys
import time

if __name__ == "__main__":
    if len(sys.argv) >= 2:
        # put 'lib' in working path to grab pygsm from same dir
        # for launch out of development directory
        libdir = os.path.join(os.path.dirname(sys.argv[0]),'lib')
        sys.path.insert(0,libdir)
        from pygsm.gsmmodem import GsmModem

        # the first argument is SERIAL PORT
        # (required, since we have no autodetect yet)
        port = sys.argv[1]

        # all subsequent options are parsed as key=value
        # pairs, to be passed on to GsmModem.__init__ as
        # kwargs, to configure the serial connection
        conf = dict([
            arg.split("=", 1)
            for arg in sys.argv[2:]
            if arg.find("=") > -1
        ])

        # dump the connection settings
        print "pyGSM Demo App"
        print "  Port: %s" % (port)
        print "  Config: %r" % (conf)
        print

        # connect to the modem (this might hang
        # if the connection settings are wrong)
        print "Connecting to GSM Modem..."
        modem = GsmModem(port=port, **conf)
        print "Waiting for incoming messages..."

        # check for new messages every two
        # seconds for the rest of forever
        while True:
            msg = modem.next_message()

            # we got a message! respond with
            # something useless, as an example
            if msg is not None:
                print "Got Message: %r" % msg
                msg.respond("Received: %d characters '%s'" %
                    (len(msg.text),msg.text))

            # no messages? wait a couple
            # of seconds and try again
            else: time.sleep(2)

    # the serial port must be provided
    # we're not auto-detecting, yet
    else:
        print "Usage: python -m pygsm.gsmmodem PORT [OPTIONS]"
